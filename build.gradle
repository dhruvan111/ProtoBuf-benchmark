buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'idea'
}

apply plugin: 'com.google.protobuf'


group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.json:json:20230227'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
    implementation 'com.javiersc.logger:logger-jvm:0.12.0'
    implementation 'com.google.protobuf:protobuf-java:4.0.0-rc-2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.0.2'
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'

    implementation 'com.google.protobuf:protobuf-java:3.19.6'
    implementation 'com.google.protobuf:protobuf-java-util:3.19.4'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.4'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.40.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/ProtoGen"
}
